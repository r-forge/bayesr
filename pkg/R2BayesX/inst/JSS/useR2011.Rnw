\documentclass[11pt,compress,t]{beamer}

\usetheme{Z}
%% includes a replacement for \usepackage{Sweave}

<<preliminaries, echo=FALSE, results=hide>>=
options(width = 70, prompt = "R> ", continue = "+ ")
library("R2BayesX")
data("ZambiaBnd")
data("BeechBnd")
@


\begin{document}


\title{Structured Additive Regression Models: \\
  An \proglang{R} Interface to \pkg{BayesX}}

\author{Nikolaus Umlauf, Thomas Kneib, Stefan Lang, Achim Zeileis}

\URL{http://eeecon.uibk.ac.at/~umlauf/}


\section{R package R2BayesX}


\subsection{Overview}

\begin{frame}
\frametitle{Overview}
\begin{itemize}
  \item Introduction
  \item Structured Additive Regression Models (STAR)
  \item Installing the \pkg{BayesX} binary
  \item The main model fitting function
  \item Available additive terms
\end{itemize}
\end{frame}


\subsection{Intro}

\begin{frame}
\frametitle{Introduction: What is BayesX?}
The free software \pkg{BayesX} is a standalone program comprising powerful tools for Bayesian and
mixed model based inference in complex semiparametric regression models with structured additive
predictor (STAR). 
\begin{itemize}
  \item Generalized additive models (GAM).
  \item Generalized additive mixed models (GAMM).
  \item Generalized geoadditive mixed models (GGAMM).
  \item Dynamic models.
  \item Varying coefficient models (VCM).
  \item Geographically weighted regression.
\end{itemize}
\bigskip
\pkg{BayesX} is written in \proglang{C++} and utilizes numerically efficient (sparse) matrix
architectures.
\end{frame}


\begin{frame}
\frametitle{Introduction: What is BayesX?}
In \pkg{BayesX}, estimation of regression parameters is based on three inferential concepts:
\begin{enumerate}
  \item Full Bayesian inference via MCMC.
  \item Inference via a mixed model representation.
  \item Penalized likelihood including variable selection.
\end{enumerate}
\bigskip
\pkg{BayesX} provides functionality for the following types of responses:
\begin{itemize}
  \item Univariate exponential family.
  \item Categorical responses with unordered responses.
  \item Categorical responses with ordered responses.
  \item Continuous time survival models.
  \item Continuous time multi-state models.
\end{itemize}
\end{frame}


% \begin{frame}
% \frametitle{Introduction: What is BayesX?}
% STAR models can be build from arbitrary combinations of the following model terms:
% \begin{itemize}
%   \item Nonlinear effects.
%   \item Seasonal effects.
%   \item Spatial effects.
%   \item Interaction surfaces.
%   \item Varying coefficients.
%   \item Cluster-specific random effects.
%   \item Regularised high-dimensional effects.
% \end{itemize}
% \end{frame}


\begin{frame}
\frametitle{Introduction: The \proglang{R} interface}
\textbf{Problems:}
\begin{itemize}
  \item \pkg{BayesX} only provides limited functionality for handling and manipulating data sets.
  \item Handling and manipulation of geographical maps is difficult.
  \item Visualizing data.
\end{itemize}
\bigskip
Therefore, the \proglang{R} package \pkg{BayesX} (available at CRAN) was developed, to provide
functionality for exploring and visualizing estimation results.
\bigskip \\
However, estimating models from \pkg{BayesX} with special program files and handling estimation
outputs within \proglang{R} is still time consuming and not straightforward.
\end{frame}


\begin{frame}[fragile]
\frametitle{Introduction: The \proglang{R} interface}
\textbf{Now:} We present the new interface package \pkg{R2BayesX}. For \proglang{R} users it is now 
possible to:
\begin{itemize}
  \item Specify and estimate STAR models with \pkg{BayesX} directly from the \proglang{R} console.
  \item Apply a set of extractor functions and methods on \pkg{BayesX} fitted model objects, e.g.\ 
    producing high level graphics of estimated effects, model diagnostic plots, summary statistics
    and more. 
\end{itemize}
\medskip
In addition:
\begin{itemize}
  \item Run already existing \pkg{BayesX} input program files from \proglang{R}.
  \item Automatically import \pkg{BayesX} output files into \proglang{R}.
\end{itemize}
\medskip
To install the package directly within \proglang{R} type:
\begin{Sinput}
install.packages("R2BayesX",
  repos = "http://R-Forge.R-project.org")
\end{Sinput}
\end{frame}


\begin{frame}
\frametitle{Introduction: Example}
Dataset on childhood malnutrition in Zambia:
\begin{center}
\begin{tabular}{|ll|}
\hline
Variable           & Description \\ \hline
\code{stunting}    & standardized $Z$-score for stunting. \\
\code{mbmi}        & body mass index of the mother. \\
\code{agechild}    & age of the child in months. \\
\code{district}    & district where the mother lives. \\
\vdots & \vdots \\ \hline
\end{tabular}
\end{center}
\medskip
We fit the following model:
$$
\texttt{stunting}_i = \gamma_0 + f_1(\texttt{agechild}_i) + f_2(\texttt{mbmi}_i) +
  f_{spat}(\texttt{district}_i) + \varepsilon_i,
$$
with $\varepsilon_i \sim N(0, \sigma^2)$.
\end{frame}


\begin{frame}[fragile]
\frametitle{Introduction: Example}
The model is specified using \proglang{R}'s formula language definition

<<formula-illustration, echo=TRUE, eval=TRUE, fig=FALSE>>=
f <- stunting ~ sx(agechild) + sx(mbmi) +
  sx(district, bs = "gk", map = ZambiaBnd, full = TRUE)
@

and estimated by

<<fit-illustration, echo=TRUE, eval=FALSE, fig=FALSE>>=
b <- bayesx(f, family = "gaussian", method = "MCMC",
  data = ZambiaNutrition)
@
<<cache-illustration, echo=FALSE, eval=TRUE>>=
if(file.exists("illustration-model.rda")) {
load("illustration-model.rda")
} else {
<<fit-illustration>>
save(b, file = "illustration-model.rda")
}
@
\bigskip
\setkeys{Gin}{width=0.48\textwidth}
<<plot-illustration-agechild, echo=FALSE, fig=TRUE, width=5, height=4, pdf=FALSE, png=TRUE>>=
par(mar = c(4, 4.1, 0.55, 1.2))
plot(b, term = "sx(agechild)", residuals = TRUE, cex = 0.1, rug = FALSE)
@
% <<plot-illustration-district, echo=FALSE, fig=TRUE, width=5, height=4, pdf=FALSE, png=TRUE>>=
% par(mar = c(0, 0, 0, 0))
% plot(b, term = "sx(district)", map = ZambiaBnd, swap = TRUE)
% box()
% @
<<plot-illustration-district, echo=FALSE, fig=TRUE, width=5, height=4, pdf=FALSE, png=TRUE>>=
par(mar = c(4.1, 0, 0.55, 1.95))
plot(b, term = "sx(district)", map = ZambiaBnd, swap = TRUE, pos = "right")
@
\end{frame}


\subsection{STAR models}

\begin{frame}
\frametitle{STAR models}
Distributional and structural assumptions, given covariates and parameters, are
based on {Generalized Linear Models} with
$$
E(y|\mathbf{x},\mathbf{z},\boldsymbol{\gamma},\boldsymbol{\theta}) = h^{-1}(\eta)$$
and structured additive predictor
$$
\eta = f_1(\mathbf{z}) + \ldots + f_p(\mathbf{z}) + \mathbf{x}^{\prime}\boldsymbol{\gamma}
$$ \\[-1.5ex]
\begin{itemize}
  \item $\mathbf{x}^{\prime}\boldsymbol{\gamma}$ parametric part of the predictor 
  \item $\mathbf{z}$ represents a generic vector of all nonlinear modeled covariates, e.g. may
    include continuous covariates, time scales, location or unit-or cluster indexes
  \item the vector $\boldsymbol{\theta}$ comprises all parameters of the functions $f_1, \dots, f_p$
  \item $f_j$ one-/two (even higher) dimensional, not necessarily continuous functions
\end{itemize}
\end{frame}


\begin{frame}
\frametitle{STAR models: Modeling the functions $f_j$}
The functions $f_j$ are possibly smooth functions comprising effects (and combinations) as e.g.\
given by
\begin{itemize}
  \item Nonlinear effects of continuous covariates: $f_j(\mathbf{z}) = f(z_1)$
  \item Two-dimensional surfaces: $f_j(\mathbf{z}) = f(z_1, z_2)$
  \item Spatially correlated effects: $f_j(\mathbf{z}) = f_{spat}(z_s)$
  \item Varying coefficients: $f_j(\mathbf{z}) = z_1f(z_2)$
  \item Spatially varying effects: $f_j(\mathbf{z}) = z_1f_{spat}(z_s)$ or
    $f_j(\mathbf{z}) = z_1f(z_2, z_3)$
  \item Random intercepts with cluster index $c$: $f_j(\mathbf{z}) = \beta_c$
  \item Random slopes with cluster index $c$: $f_j(\mathbf{z}) = z_1\beta_c$
\end{itemize}
\end{frame}


\begin{frame}
\frametitle{STAR models: General form}
\begin{itemize}
  \item Vector of function evaluations
    $\mathbf{f}_j = (f_j(\mathbf{z}_{1}),\ldots,f_j(\mathbf{z}_{n}))$ of the $i = 1,\ldots,n$
    observations can be written in matrix notation
    \begin{equation*}
    \mathbf{f}_j = \mathbf{Z}_j\boldsymbol{\beta}_j, 
    \end{equation*}
    with $\mathbf{Z}_j$ as the design matrix, where $\boldsymbol{\beta}_j$ are unknown regression
    coefficients.
  \item Form of $\mathbf{Z}_j$ only depends on the functional type chosen.
  \item Penalized least squares:
    \begin{equation*}
    \text{PLS}(\boldsymbol{\beta},\boldsymbol{\gamma}) = ||\mathbf{y} - \boldsymbol{\eta}||^2 + 
    \lambda_1\boldsymbol{\beta}_1^{\prime}\mathbf{K}_1\boldsymbol{\beta}_1 + \ldots +
    \lambda_p\boldsymbol{\beta}_p^{\prime}\mathbf{K}_p\boldsymbol{\beta}_p
    \end{equation*}
\end{itemize}
\end{frame}


\begin{frame}
\frametitle{STAR models: General form}
\begin{itemize}
  \item Prior for $\boldsymbol{\beta}$ in the corresponding Bayesian approach
    \begin{equation*}
    p(\boldsymbol{\beta}_j | \tau_j^2) \propto \exp \left(- \frac{1}{2\tau_j^2}
    \boldsymbol{\beta_j}^{\prime}\mathbf{K}_j\boldsymbol{\beta}_j\right),
    \end{equation*}
    $\tau_j^2$ variance parameter, governs the smoothness of $f_j$.
  \item Structure of $\mathbf{K}_j$ also depends on the type of covariates and on assumptions about
    smoothness of $\mathbf{f}_j$.
  \item The variance parameter $\tau_j^2$ is equivalent to the inverse smoothing parameter in a
    frequentist approach. Utilizing mixed model technology, restricted maximum likelihood or
    marginal likelihood estimation forms the basis for determination. From a Bayesian perspective,
    this yields empirical Bayes/posterior mode estimates for the STAR models.
\end{itemize}
\end{frame}


\subsection{Installing the \pkg{BayesX} binary}

\begin{frame}[fragile]
\frametitle{Installing the \pkg{BayesX} binary}
Before STAR models can be fitted with package \pkg{R2BayesX} from \proglang{R}, the binary
command-line version of the program \pkg{BayesX} needs to be installed and linked to \proglang{R}.

<<echo=TRUE, eval=FALSE>>=
library("R2BayesX")
install.bayesx(inst.dir = "/home/bin", source.dir = NULL)
@

\medskip

Then by setting e.g.

<<echo=TRUE, eval=FALSE>>=
options(bayesx.bin = "/home/bin/BayesX")
@

the model fitting function of \pkg{R2BayesX} will know the location of the binary using function
\fct{getOption}.

\bigskip 

\textbf{Note:} On Windows systems function \fct{install.bayesx} will try do download and execute an
installer, which will additionally install the GUI version of \pkg{BayesX}.
\end{frame}


\subsection{The main model fitting function}

\begin{frame}[fragile]
\frametitle{The main model fitting function}
The arguments of the main model fitting function are
\begin{Sinput}
bayesx(formula, data, weights = NULL, subset = NULL,
  offset = NULL, na.action = na.fail, contrasts = NULL,
  family = "gaussian", method = "MCMC",
  control = bayesx.control(...), ...)
\end{Sinput}

\bigskip
\textbf{Methods:} \\
\code{"MCMC"}, \code{"REML"}, \code{"STEP"}. \medskip \\
\textbf{Families:} \\
\code{"binomial"}, \code{"binomialprobit"}, \code{"gamma"}, \code{"gaussian"}, \code{"multinomial"},
\code{"poisson"}, \code{"cox"}, \code{"cumprobit"}, \code{"multistate"},
\code{"binomialcomploglog"}, \code{"cumlogit"}, \code{"multinomialcatsp"},
\code{"multinomialprobit"}, \code{"seqlogit"}, \code{"seqprobit"}.
\bigskip \\
\textbf{Note:} family objects are currently not supported.
\end{frame}


\subsection{Available additive terms}

\begin{frame}[fragile]
\frametitle{Available additive terms}
The main model term is function \fct{sx}, with arguments
\begin{Sinput}
sx(x, z = NULL, bs = "ps", by = NA, ...)
\end{Sinput}
\fct{sx} is simply an interface to function \fct{s} from package \pkg{mgcv}.

\bigskip
\textbf{Term types:} \\
\code{"rw1"}, \code{"rw2"}, \code{"season"}, \code{"ps"} (\code{"psplinerw1"}, \code{"psplinerw2"}),
\code{"te"} (\code{"pspline2dimrw1"}), \code{"kr"} (\code{"kriging"}), \code{"gk"}
(\code{"geokriging"}), \code{"gs"} (\code{"geospline"}), \code{"mrf"} (\code{"spatial"}),
\code{"bl"} (\code{"baseline"}), \code{"factor"}, \code{"ridge"}, \code{"lasso"}, \code{"nigmix"}.

\bigskip
Additional options within ``\code{...}'' for each term type and method may be looked up using
function \fct{bayes.term.options}, e.g.

<<echo=TRUE, eval=FALSE>>=
bayesx.term.options(bs = "ps", method = "MCMC")
@
\end{frame}

\end{document}

